(define nil '())
(define (same-parity first . nums)
  (define rmd (remainder first 2))
  (define (iter l-next)
    (cond ((null? l-next) nil)
          ((= (remainder (car l-next) 2) rmd) (cons (car l-next) (iter (cdr l-next))))
          (else (iter (cdr l-next)))))
  (cons first (iter nums)))
(same-parity 1 2 3 4 5 6 7)
(same-parity 2 3 4 5 6 7)