(define (cons a b)
  (* (expt 2 a)
     (expt 3 b)))
(define (car c)
  (if (= 0 (remainder c 3))
      (car (/ c 3))
      (/ (log c) (log 2))))
(define (cdr c)
  (if (= 0 (remainder c 2))
      (cdr (/ c 2))
      (/ (log c) (log 3))))
(trace-entry cons)
(trace-entry car)
(trace-entry cdr)
(cdr (cons 5 6))